html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

body {
  background: var(--surface-color);
  font-family: var(--main-font);
  margin: 0;
  display: flex;
  flex-wrap: nowrap;
}

a {
  color: var(---link-color);
}

/*
  We like focus rings, but only when a person is tabbing (not clicking).
  Thus, we scope all focus ring suppression to a "no-focus" class, which
  is added to the body tag when a person is clicking, and removed when a
  person is tabbing. Same idea as https://github.com/lindsayevans/outline.js
*/
.no-focus :focus {
  outline: 0;
}
.no-focus ::-moz-focus-inner {
  border: 0;
}

.left-sidebar {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: var(--left-sidebar-width);
  padding: 0 1.5rem;
  background: var(--left-sidebar-color);
  box-shadow: 0px 0px 11px -8px #444;
  display: flex;
  flex-direction: column;
}

@media (max-width: 819px) { /* --two-to-three-columns */
  .left-sidebar {
    display: none;
  }
}

.title-box {
  flex: 0 0 auto;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
.title {
  margin: 0 0 0.75rem;
  font-size: 1.55rem;
  line-height: 1;
}
.subtitle {
  margin: 0;
  font-size: 0.875rem;
  line-height: 1;
  color: var(--mb-gray-60);
}
.description {
  flex: 0 0 auto;
  margin-bottom: 2.5rem;
  line-height: 1.33;
}
.description p {
  margin: 0;
}
.recent {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
}
.recent__title {
  margin: 0 0 1rem 0;
  font-size: 1.125rem;
}
#twitter-widget-0 {
  /* This overrides the widget's fixed height, and forces it to
     have a flexible height that takes up the remaining space on
     the sidebar. Setting min-height:0 reduces the min-height from
     200px to 150px, but it won't go any smaller, for some reason.
  */
  flex: 1 1 100% !important;
  min-height: 0 !important;
  box-shadow: inset 0px 6px 7px -11px #444, inset 0px -6px 7px -11px;
}

.mini-footer {
  font-size: 12px;
  padding: 0.75rem 0;
  text-align: center;
}
.mini-footer a {
  color: var(--mb-gray-60);
}

.workspace {
  margin-left: var(--left-sidebar-width);
  margin-right: var(--right-sidebar-width);
  width: 100%;
}

@media (max-width: 819px) { /* --two-to-three-columns */
  .workspace {
    margin-left: 0;
  }
}
@media (max-width: 603px) { /* --one-to-two-columns */
  .workspace {
    margin-right: 0;
  }
}

.equipment {
  position: relative;
  padding: 4rem 0 0 0;

  /*
   centers the paper, which
   is an inline-block element
   in order for its width to
   depend on its content.
  */
  text-align: center;
}

.music-box-kit {
  display: inline-block;
}

.music-box {
  --left-box-edge-width: 30px;
  --right-box-edge-width: 30px;
  --paper-width: calc(var(--paper-side-margins) * 2 + var(--number-of-notes) * var(--hole-width));
  --music-box-width: calc(var(--left-box-edge-width) + var(--paper-width) + var(--right-box-edge-width));
}

/* these classes inherit custom properties from the values defined above. */
.music-box__bottom-plate {
  position: fixed;
  top: var(--music-box-distance-from-top-of-workspace);
  z-index: var(--z-music-box-bottom-plate); /* positions the box underneath the paper */
  width: var(--music-box-width);
  height: var(--music-box-height);

  background-color: var(--music-box-color);
  transform: translateX(calc(-1 * var(--left-box-edge-width)));
  border-radius: 12px;
}

.music-box__playhead {
  position: fixed;
  top: var(--playhead-distance-from-top-of-workspace);
  z-index: var(--z-music-box-playhead);

  width: var(--paper-width);
  height: 1px;

  background-color: #ff8d00;
  pointer-events: none;
}

.paper {
  position: relative; /* to allow absolute positioning of the add-paper-button */
  display: inline-block; /* to allow its width to depend on its content */
  background: var(--paper-color);
  padding: 1rem 2rem 0rem;
  box-shadow: 0px 0px 11px -8px #444;

  /* allow the paper to completely move through the box */
  margin-bottom: calc(100vh - var(--playhead-distance-from-top-of-workspace) - 1rem);
}

.song-title {
  padding: 2rem 0 2.5rem;
}

.song-title input {
  text-align: center;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  border-bottom: 1px solid var(--mb-gray-40);
  font-size: 0.875rem;
  width: calc((var(--number-of-notes) - 1) * var(--hole-width));
  padding-bottom: 2px;
}

.note-header {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  position: sticky;
  top: 0;
  background: rgba(255, 255, 255, 0.95);
  padding: 4px 0 3px;
  /* Stack our header above the note-lines and holes */
  z-index: var(--z-music-box-note-header);
}

.thirty .note-label:nth-of-type(odd) {
  margin-top: 1.125rem;
}
.thirty .note-label {
  font-size: 0.875rem;
}
.note-label {
  flex: 0 0 var(--hole-width);
  text-align: center;
  position: relative;
}
.sharp::after {
  display: block;
  content: '#';
  font-size: 0.5rem;
  position: absolute;
  top: -2px;
  left: 0px;
}

.note-lines {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: stretch;
  /* we add the hole-width here to include the starting-gap (which is dynamic) */
  min-height: calc(var(--default-note-line-length) + var(--hole-width));
}

.note-line {
  position: relative;
  width: var(--hole-width);
  background-image: url('/images/measure-lines.gif');
  background-position: 0 var(--hole-width);
  cursor: pointer;
}

.note-line:first-child {
  background-image: url('/images/measure-lines.gif');
  background-position: calc(var(--hole-width) / 2) var(--hole-width);
  background-repeat: repeat-y;
}

.note-line:last-child {
  background-image: url('/images/measure-lines.gif');
  background-position: right calc(var(--hole-width) / 2) top var(--hole-width);
  background-repeat: repeat-y;
}

/* Crisper measure lines for retina devices (looks nice on page boundaries) */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .note-line,
  .note-line:first-child,
  .note-line:last-child {
    background-image: url('/images/measure-lines-2x.gif');
    background-size: 20px 48px;
  }
}

/* The vertical line running down the center of the column */
.note-line::before {
  display: block;
  content: "";
  position: absolute;
  margin-left: auto;
  margin-right: auto;
  left: 0;
  right: 0;
  top: var(--hole-width);
  bottom: 0;
  width: 1px;
  background-color: black
}

.shadow-note {
  display: none;
  width: var(--hole-width);
  height: var(--hole-width);
  border-radius: 50%;
  background-color: var(--shadow-note-color);

  /* prevent these notes from stacking in columns */
  position: absolute;
  top: 0;
  z-index: var(--z-music-box-notes);
}

.shadow-note--visible {
  display: block;
}

.hole {
  display: block;
  position: absolute;
  top: 0;
  width: var(--hole-width);
  height: var(--hole-width);
  border-radius: 50%;
  border: none;
  background-color: var(--hole-color);
  cursor: pointer;
  z-index: var(--z-music-box-notes);
  padding: 0;
}

.silent {
  background-color: var(--mb-white);
  background-image: url('/images/asterisk.svg');
  background-size: 80% 80%; /* the SVG is scaled to allow a gap between the image and background lines, regardless of the hole size. */
  background-position: center;
  background-repeat: no-repeat;
}

.audio-disabled-message {
  display: block;
  position: fixed;
  top: 0;
  right: var(--right-sidebar-width);
  z-index: var(--z-audio-context-message);
  width: 156px; /* a magic number that fits our text well */
  opacity: 1;
  font-size: 12px;
  text-align: left;
  padding: 1rem;
  background: var(--surface-color);
}
.audio-disabled-message--hidden {
  display: none;
}
.audio-disabled-message--audio-enabled {
  opacity: 0;
  transition-property: opacity;
  transition-delay: 1.2s;
  transition-duration: 1.5s;
  transition-timing-function: linear;

  /* Currently it's possible for this transparent
     message box to overlap the music paper and
     prevent clicking. Removing pointer events is
     a quick solution. Long-term, it might be nice
     to reapply audio-disabled-message--hidden on
     a transition event.
  */
  pointer-events: none;
}

.right-sidebar {
  position: fixed;
  z-index: var(--z-controls);
  top: 0;
  right: 0;
  bottom: 0;
  width: var(--right-sidebar-width);
  margin: 1rem 0;
  padding: 0 1rem;
  border-left: var(--controls-border);
  background: var(--surface-color);
  font-size: 14px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

@media (max-width: 603px) { /* --one-to-two-columns */
  .right-sidebar {
    visibility: hidden;
  }
}

.controls {
  flex: 1 1 0%;
}

.controls__section {
  border-top: var(--controls-border);
  padding: 1rem 0 1rem;
}
/* define spacing between controls elements */
.controls__section > *:not(:last-child) {
  padding-bottom: 1rem;
}

.play-button {
  display: block;
  margin: 0 auto;
  border: none;
  background: none;
  padding: 0 1rem 1rem;
  cursor: pointer;
}
.play-button__outer-circle {
  fill: var(--mb-gray-60);
}
.play-button__inner-shape {
  fill: var(--controls-button-color);
}

@media (max-width: 603px) { /* --one-to-two-columns */
  .play-button {
    visibility: visible;
    position: fixed;
    /* follow material design specs, shown here: https://material.io/components/buttons-floating-action-button/#specs */
    bottom: 1rem;
    right: 1rem;
    width: 56px;
    padding: 0;
  }
}

.new-song {
  width: 100%;
  font-family: inherit;
  font-size: inherit;
  background-color: var(--controls-button-color);
  background-image: url(/images/new-blank-song.svg);
  background-repeat: no-repeat;
  background-position: 7px 50%;
  border-radius: 5px;
  border: 1px solid var(--mb-gray-20);
  border-bottom: 1px solid #bbb;
  padding: 0.4rem 0.4rem 0.4rem 1.8rem;
  display: flex;
  align-items: center;
  justify-content: left;
  cursor: pointer;
}

.new-song:hover {
  background-color: #f8f8f8;
}

.new-song:active {
  border: 1px solid var(--mb-gray-20);
}

.tempo {
  display: block;
}

.tempo-inputs {
  display: flex;
  justify-content: space-between;
}
.tempo-slider {
  cursor: pointer;
  width: 100%;
}
.tempo-field {
  width: 44px;
  margin-left: 6px;
  border: 1px solid var(--mb-gray-30);
  border-radius: 2px;
}

.footnote p {
  font-size: 12px;
  margin: 0;
  color: var(--mb-gray-50);
  position: relative;
  padding-left: 6px; /* space for the icon */
}
.footnote p::before {
  content: "";
  width: 10px;
  height: 10px;
  position: absolute;
  background-image: url('/images/asterisk.svg');
  background-repeat: no-repeat;
  background-size: 100%;
  top: -2px;
  left: -8px;
}
.footnote--hidden {
  display: none;
}

.song-updated {
  display: flex;
  position: fixed;
  top: 0;
  padding: 8px 12px;
  font-size: 13px;
  text-align: center;
  opacity: 1;
  z-index: var(--z-messages);
}
.song-updated--hidden {
  opacity: 0;

  /* fade-out settings */
  transition-property: opacity;
  transition-duration: 3s;
}

.song-updated__message {
  color: var(--mb-gray-60);
  margin-right: 0.5rem;
}

.song-updated__details {
  border: none;
  cursor: pointer;

  /* temporarily hidden until we set up a modal and description for this */
  display: none;
}

.question-icon {
  background-color: var(--discrete-text);
  -webkit-mask-image: url(/images/question-icon.svg);
  mask-image: url(/images/question-icon.svg);
  width: 14px;
  height: 14px;
}

.twitter-share {
  position: fixed;
  bottom: 0;
  margin: 0 0 0.75rem 1rem;
  z-index: var(--z-twitter-share);
}

/* Designed to match the tweet button used in Twitter's embed snippet, as shown here:
   https://developer.twitter.com/en/docs/twitter-for-websites/tweet-button/overview */
.share-button {
  display: inline-block;
  height: 28px;
  vertical-align: top;
  line-height: 26px;
  font-family: 'Helvetica Neue',Arial,sans-serif;
  font-size: 13px;
  font-weight: 500;
  text-decoration: none;
  padding: 1px 10px 1px 9px;
  color: #fff;
  background-color: #1b95e0;  /* twitter's blue */
  border-radius: 4px;
  cursor: pointer;
  zoom: 1;
}
.share-button i {
  position: relative;
  display: inline-block;
  top: 4px;
  width: 18px;
  height: 18px;
  margin-right: 4px;
  background: transparent 0 0 no-repeat;
  background-image: url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2072%2072%22%3E%3Cpath%20fill%3D%22none%22%20d%3D%22M0%200h72v72H0z%22%2F%3E%3Cpath%20class%3D%22icon%22%20fill%3D%22%23fff%22%20d%3D%22M68.812%2015.14c-2.348%201.04-4.87%201.744-7.52%202.06%202.704-1.62%204.78-4.186%205.757-7.243-2.53%201.5-5.33%202.592-8.314%203.176C56.35%2010.59%2052.948%209%2049.182%209c-7.23%200-13.092%205.86-13.092%2013.093%200%201.026.118%202.02.338%202.98C25.543%2024.527%2015.9%2019.318%209.44%2011.396c-1.125%201.936-1.77%204.184-1.77%206.58%200%204.543%202.312%208.552%205.824%2010.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163%200%206.345%204.513%2011.638%2010.504%2012.84-1.1.298-2.256.457-3.45.457-.845%200-1.666-.078-2.464-.23%201.667%205.2%206.5%208.985%2012.23%209.09-4.482%203.51-10.13%205.605-16.26%205.605-1.055%200-2.096-.06-3.122-.184%205.794%203.717%2012.676%205.882%2020.067%205.882%2024.083%200%2037.25-19.95%2037.25-37.25%200-.565-.013-1.133-.038-1.693%202.558-1.847%204.778-4.15%206.532-6.774z%22%2F%3E%3C%2Fsvg%3E);
}

.extend-song-button {
  position: absolute;
  left: 0;
  bottom: 0;
  /* We have to set 'width: 100%' instead of 'right: 0'
    to get full width because it's a button. See:
    https://stackoverflow.com/q/29293302/1154642 */
  width: 100%;
  margin: 0;
  padding: 0;
  border: 0;
  font-family: var(--main-font);
  font-size: 1.25rem;
  line-height: 3rem;
  background: var(--paper-color);
  cursor: pointer;
  z-index: var(--z-music-box-extend-button);
}
.extend-song-button:hover {
  background: linear-gradient(to bottom,
   rgba(255,255,255,0.8) 0%,
   rgba(255,255,255,0.9) 40%,
   var(--paper-color) 80%,
   var(--paper-color) 100%
  );
}
.extend-song-button:hover .dashed-line {
  position: absolute;
  left: 0;
  right: 0;
  top: -1px;
  height: 1px;

  /* Getting a nice-looking, centered, custom-length, gray-and-white dashed border is difficult.
     I ended up hacking it a bit by using a linear gradient background image, on a 1px height element. */
  background-image: linear-gradient(90deg,
   var(--mb-gray-40) 0%,
   var(--mb-gray-40) 30%,
   var(--paper-color) 30%,
   var(--paper-color) 70%,
   var(--mb-gray-40) 70%,
   var(--mb-gray-40) 100%
  );
  background-size: 20px 1px;
  background-position: center;
  pointer-events: none;
}

.divider {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;

  height: 1px;
  background-image: linear-gradient(90deg,
   var(--mb-gray-40) 0%,
   var(--mb-gray-40) 30%,
   var(--paper-color) 30%,
   var(--paper-color) 70%,
   var(--mb-gray-40) 70%,
   var(--mb-gray-40) 100%  );
  background-size: 20px 1px;
  background-position: center;
  pointer-events: none;
}

.divider__trim-icon {
  position: absolute;
  right: 10px;
  top: 2px;
  font-size: 1.25rem;
  font-family: var(--main-font);
  padding: 0;
  border: none;
  cursor: pointer;
  color: var(--mb-gray-40);
  pointer-events: auto;
  background: none;
}
.divider__trim-icon--hidden {
  display: none;
}
